"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/api/usersFetch.js":
/*!*******************************!*\
  !*** ./src/api/usersFetch.js ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleLoginFetch: () => (/* binding */ handleLoginFetch),\n/* harmony export */   registerUser: () => (/* binding */ registerUser),\n/* harmony export */   updateProfileFetch: () => (/* binding */ updateProfileFetch)\n/* harmony export */ });\nconst handleLoginFetch = async (email, password)=>{\n    try {\n        const response = await fetch(\"http://localhost:9000/users/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                password\n            })\n        });\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        return {\n            status: \"Error\",\n            message: \"Error en el servidor. Inténtalo de nuevo.\"\n        };\n    }\n};\nconst registerUser = async (bodyParam)=>{\n    try {\n        const response = await fetch(\"http://localhost:9000/users/register\", {\n            method: \"POST\",\n            body: bodyParam\n        });\n        if (!response.ok) {\n            const errorData = await response.json();\n            return {\n                error: errorData.message || \"Error en la petici\\xf3n: \".concat(response.status, \" \").concat(response.statusText)\n            };\n        }\n    } catch (error) {}\n};\nconst updateProfileFetch = async (formDataToSend)=>{\n    const token = localStorage.getItem('token') || sessionStorage.getItem('token');\n    if (!token) {\n        console.error(\"No hay token de autenticación.\");\n        return {\n            status: \"Error\",\n            message: \"No hay token disponible\"\n        };\n    }\n    try {\n        const response = await fetch(\"http://localhost:9000/users/profile\", {\n            method: \"PUT\",\n            headers: {\n                'Authorization': \"Bearer \".concat(token)\n            },\n            body: formDataToSend\n        });\n        const data = await response.json();\n        if (response.ok) {\n            return {\n                status: \"Succeeded\",\n                data\n            };\n        } else {\n            return {\n                status: \"Error\",\n                message: data.message\n            };\n        }\n    } catch (error) {\n        console.error('Error en la solicitud:', error);\n        return {\n            status: \"Error\",\n            message: error.message\n        };\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXBpL3VzZXJzRmV0Y2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ08sTUFBTUEsbUJBQW1CLE9BQU9DLE9BQU9DO0lBQzFDLElBQUk7UUFDQSxNQUFNQyxXQUFXLE1BQU1DLE1BQU8scUNBQW9DO1lBQzlEQyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ0wsZ0JBQWdCO1lBQ3BCO1lBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztnQkFBRVI7Z0JBQU9DO1lBQVM7UUFDM0M7UUFFQSxNQUFNUSxPQUFPLE1BQU1QLFNBQVNRLElBQUk7UUFDaEMsT0FBT0Q7SUFDWCxFQUFFLE9BQU9FLE9BQU87UUFDWixPQUFPO1lBQUVDLFFBQVE7WUFBU0MsU0FBUztRQUE0QztJQUNuRjtBQUNKLEVBQUM7QUFFTSxNQUFNQyxlQUFlLE9BQU9DO0lBQy9CLElBQUk7UUFDQSxNQUFNYixXQUFXLE1BQU1DLE1BQU8sd0NBQXVDO1lBQ2pFQyxRQUFRO1lBQ1JFLE1BQU1TO1FBQ1Y7UUFDQSxJQUFJLENBQUNiLFNBQVNjLEVBQUUsRUFBRTtZQUNkLE1BQU1DLFlBQVksTUFBTWYsU0FBU1EsSUFBSTtZQUNyQyxPQUFPO2dCQUFFQyxPQUFPTSxVQUFVSixPQUFPLElBQUksNEJBQTRDWCxPQUFuQkEsU0FBU1UsTUFBTSxFQUFDLEtBQXVCLE9BQXBCVixTQUFTZ0IsVUFBVTtZQUFHO1FBQzNHO0lBQ0osRUFBRSxPQUFPUCxPQUFPLENBRWhCO0FBQ0osRUFBQztBQUVNLE1BQU1RLHFCQUFxQixPQUFPQztJQUNyQyxNQUFNQyxRQUFRQyxhQUFhQyxPQUFPLENBQUMsWUFBWUMsZUFBZUQsT0FBTyxDQUFDO0lBQ3RFLElBQUksQ0FBQ0YsT0FBTztRQUNSSSxRQUFRZCxLQUFLLENBQUM7UUFDZCxPQUFPO1lBQUVDLFFBQVE7WUFBU0MsU0FBUztRQUEwQjtJQUNqRTtJQUVBLElBQUk7UUFDQSxNQUFNWCxXQUFXLE1BQU1DLE1BQU8sdUNBQXNDO1lBQ2hFQyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ0wsaUJBQWlCLFVBQWdCLE9BQU5nQjtZQUMvQjtZQUNBZixNQUFNYztRQUNWO1FBRUEsTUFBTVgsT0FBTyxNQUFNUCxTQUFTUSxJQUFJO1FBQ2hDLElBQUlSLFNBQVNjLEVBQUUsRUFBRTtZQUNiLE9BQU87Z0JBQUVKLFFBQVE7Z0JBQWFIO1lBQUs7UUFDdkMsT0FBTztZQUNILE9BQU87Z0JBQUVHLFFBQVE7Z0JBQVNDLFNBQVNKLEtBQUtJLE9BQU87WUFBQztRQUNwRDtJQUNKLEVBQUUsT0FBT0YsT0FBTztRQUNaYyxRQUFRZCxLQUFLLENBQUMsMEJBQTBCQTtRQUN4QyxPQUFPO1lBQUVDLFFBQVE7WUFBU0MsU0FBU0YsTUFBTUUsT0FBTztRQUFDO0lBQ3JEO0FBQ0osRUFBQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFx0aHVsaVxcRGVza3RvcFxcQ29kZVNwYWNlXFxQcm95ZWN0byBmaW5hbFxcZnJvbnRcXHNyY1xcYXBpXFx1c2Vyc0ZldGNoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlxyXG5leHBvcnQgY29uc3QgaGFuZGxlTG9naW5GZXRjaCA9IGFzeW5jIChlbWFpbCwgcGFzc3dvcmQpID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDo5MDAwL3VzZXJzL2xvZ2luYCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBlbWFpbCwgcGFzc3dvcmQgfSksXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmV0dXJuIHsgc3RhdHVzOiBcIkVycm9yXCIsIG1lc3NhZ2U6IFwiRXJyb3IgZW4gZWwgc2Vydmlkb3IuIEludMOpbnRhbG8gZGUgbnVldm8uXCIgfTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHJlZ2lzdGVyVXNlciA9IGFzeW5jIChib2R5UGFyYW0pID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDo5MDAwL3VzZXJzL3JlZ2lzdGVyYCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICBib2R5OiBib2R5UGFyYW0sXHJcbiAgICAgICAgfSlcclxuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGVycm9yRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgICAgICAgcmV0dXJuIHsgZXJyb3I6IGVycm9yRGF0YS5tZXNzYWdlIHx8IGBFcnJvciBlbiBsYSBwZXRpY2nDs246ICR7cmVzcG9uc2Uuc3RhdHVzfSAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCB9O1xyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcblxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgdXBkYXRlUHJvZmlsZUZldGNoID0gYXN5bmMgKGZvcm1EYXRhVG9TZW5kKSA9PiB7XHJcbiAgICBjb25zdCB0b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpIHx8IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyk7XHJcbiAgICBpZiAoIXRva2VuKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihcIk5vIGhheSB0b2tlbiBkZSBhdXRlbnRpY2FjacOzbi5cIik7XHJcbiAgICAgICAgcmV0dXJuIHsgc3RhdHVzOiBcIkVycm9yXCIsIG1lc3NhZ2U6IFwiTm8gaGF5IHRva2VuIGRpc3BvbmlibGVcIiB9O1xyXG4gICAgfVxyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDo5MDAwL3VzZXJzL3Byb2ZpbGVgLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogXCJQVVRcIixcclxuICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyICR7dG9rZW59YCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgYm9keTogZm9ybURhdGFUb1NlbmRcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxyXG4gICAgICAgIGlmIChyZXNwb25zZS5vaykge1xyXG4gICAgICAgICAgICByZXR1cm4geyBzdGF0dXM6IFwiU3VjY2VlZGVkXCIsIGRhdGEgfTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4geyBzdGF0dXM6IFwiRXJyb3JcIiwgbWVzc2FnZTogZGF0YS5tZXNzYWdlIH07XHJcbiAgICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBlbiBsYSBzb2xpY2l0dWQ6JywgZXJyb3IpO1xyXG4gICAgICAgIHJldHVybiB7IHN0YXR1czogXCJFcnJvclwiLCBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIH07XHJcbiAgICB9XHJcbn0iXSwibmFtZXMiOlsiaGFuZGxlTG9naW5GZXRjaCIsImVtYWlsIiwicGFzc3dvcmQiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsIm1lc3NhZ2UiLCJyZWdpc3RlclVzZXIiLCJib2R5UGFyYW0iLCJvayIsImVycm9yRGF0YSIsInN0YXR1c1RleHQiLCJ1cGRhdGVQcm9maWxlRmV0Y2giLCJmb3JtRGF0YVRvU2VuZCIsInRva2VuIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInNlc3Npb25TdG9yYWdlIiwiY29uc29sZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/api/usersFetch.js\n"));

/***/ })

});