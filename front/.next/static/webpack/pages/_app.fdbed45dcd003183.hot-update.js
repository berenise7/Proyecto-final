"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/api/usersFetch.js":
/*!*******************************!*\
  !*** ./src/api/usersFetch.js ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addFavoriteBook: () => (/* binding */ addFavoriteBook),\n/* harmony export */   handleLoginFetch: () => (/* binding */ handleLoginFetch),\n/* harmony export */   registerUser: () => (/* binding */ registerUser),\n/* harmony export */   removeFavoriteBook: () => (/* binding */ removeFavoriteBook),\n/* harmony export */   updateProfileFetch: () => (/* binding */ updateProfileFetch)\n/* harmony export */ });\nconst handleLoginFetch = async (email, password)=>{\n    try {\n        const response = await fetch(\"http://localhost:9000/users/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                password\n            })\n        });\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        return {\n            status: \"Error\",\n            message: \"Error en el servidor. Inténtalo de nuevo.\"\n        };\n    }\n};\nconst registerUser = async (formData)=>{\n    try {\n        const response = await fetch(\"http://localhost:9000/users/register\", {\n            method: \"POST\",\n            body: formData\n        });\n        if (!response.ok) {\n            let errorMessage = \"Error en la petici\\xf3n: \".concat(response.status, \" \").concat(response.statusText);\n            try {\n                const errorData = await response.json();\n                errorMessage = errorData.message || errorMessage;\n            } catch (e) {\n                const errorText = await response.text();\n                errorMessage = errorText || errorMessage;\n            }\n            return {\n                error: errorMessage\n            };\n        }\n        const userCreated = await response.json();\n        return userCreated;\n    } catch (error) {\n        console.error(\"Error al crear el libro:\", error);\n        return {\n            error: \"Ocurrió un error inesperado\"\n        };\n    }\n};\nconst addFavoriteBook = async (userId, bookId, token)=>{\n    try {\n        const response = await fetch(\"http://localhost:9000/users/favorites\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': \"Bearer \".concat(token)\n            },\n            body: JSON.stringify({\n                userId,\n                bookId\n            })\n        });\n        const data = await response.json();\n        if (response.ok) {\n            console.log(\"Libro agregado a favoritos\", data);\n            return data;\n        } else {\n            console.error(\"Error al agregar a favoritos\", data.message);\n            return null;\n        }\n    } catch (error) {\n        console.error(\"Error en la solicitud:\", error);\n        return {\n            error: \"Ocurrió un error inesperado\"\n        };\n    }\n};\nconst removeFavoriteBook = async (userId, bookId, token)=>{\n    try {\n        const response = await fetch(\"http://localhost:9000/users/favorites\", {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': \"Bearer \".concat(token)\n            },\n            body: JSON.stringify({\n                userId,\n                bookId\n            })\n        });\n        const data = await response.json();\n        if (response.ok) {\n            console.log(\"Libro eliminado de favoritos\", data);\n            return data;\n        } else {\n            console.error(\"Error al eliminar en favoritos\", data.message);\n            return null;\n        }\n    } catch (error) {\n        console.error(\"Error en la solicitud:\", error);\n        return {\n            error: \"Ocurrió un error inesperado\"\n        };\n    }\n};\nconst updateProfileFetch = async (formDataToSend)=>{\n    const token = localStorage.getItem('token') || sessionStorage.getItem('token');\n    if (!token) {\n        console.error(\"No hay token de autenticación.\");\n        return {\n            status: \"Error\",\n            message: \"No hay token disponible\"\n        };\n    }\n    try {\n        console.log(\"Antes de llamda\");\n        const response = await fetch(\"http://localhost:9000/users/profile\", {\n            method: \"PUT\",\n            headers: {\n                'Authorization': \"Bearer \".concat(token)\n            },\n            body: formDataToSend\n        });\n        const data = await response.json();\n        if (response.ok) {\n            return {\n                status: \"Succeeded\",\n                data\n            };\n        } else {\n            return {\n                status: \"Error\",\n                message: data.message\n            };\n        }\n    } catch (error) {\n        console.error('Error en la solicitud:', error);\n        return {\n            status: \"Error\",\n            message: error.message\n        };\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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WUFBRUEsT0FBTztRQUE4QjtJQUNsRDtBQUNKLEVBQUM7QUFFTSxNQUFNbUIscUJBQXFCLE9BQU9DO0lBQ3JDLE1BQU1KLFFBQVFLLGFBQWFDLE9BQU8sQ0FBQyxZQUFZQyxlQUFlRCxPQUFPLENBQUM7SUFDdEUsSUFBSSxDQUFDTixPQUFPO1FBQ1JKLFFBQVFaLEtBQUssQ0FBQztRQUNkLE9BQU87WUFBRUMsUUFBUTtZQUFTQyxTQUFTO1FBQTBCO0lBQ2pFO0lBRUEsSUFBSTtRQUNBVSxRQUFRSyxHQUFHLENBQUM7UUFFWixNQUFNMUIsV0FBVyxNQUFNQyxNQUFPLHVDQUFzQztZQUNoRUMsUUFBUTtZQUNSQyxTQUFTO2dCQUNMLGlCQUFpQixVQUFnQixPQUFOc0I7WUFDL0I7WUFDQXJCLE1BQU15QjtRQUNWO1FBRUEsTUFBTXRCLE9BQU8sTUFBTVAsU0FBU1EsSUFBSTtRQUNoQyxJQUFJUixTQUFTYyxFQUFFLEVBQUU7WUFDYixPQUFPO2dCQUFFSixRQUFRO2dCQUFhSDtZQUFLO1FBQ3ZDLE9BQU87WUFDSCxPQUFPO2dCQUFFRyxRQUFRO2dCQUFTQyxTQUFTSixLQUFLSSxPQUFPO1lBQUM7UUFDcEQ7SUFDSixFQUFFLE9BQU9GLE9BQU87UUFDWlksUUFBUVosS0FBSyxDQUFDLDBCQUEwQkE7UUFDeEMsT0FBTztZQUFFQyxRQUFRO1lBQVNDLFNBQVNGLE1BQU1FLE9BQU87UUFBQztJQUNyRDtBQUNKLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcdGh1bGlcXERlc2t0b3BcXENvZGVTcGFjZVxcUHJveWVjdG8gZmluYWxcXGZyb250XFxzcmNcXGFwaVxcdXNlcnNGZXRjaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcclxuZXhwb3J0IGNvbnN0IGhhbmRsZUxvZ2luRmV0Y2ggPSBhc3luYyAoZW1haWwsIHBhc3N3b3JkKSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly9sb2NhbGhvc3Q6OTAwMC91c2Vycy9sb2dpbmAsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgZW1haWwsIHBhc3N3b3JkIH0pLFxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJldHVybiB7IHN0YXR1czogXCJFcnJvclwiLCBtZXNzYWdlOiBcIkVycm9yIGVuIGVsIHNlcnZpZG9yLiBJbnTDqW50YWxvIGRlIG51ZXZvLlwiIH07XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCByZWdpc3RlclVzZXIgPSBhc3luYyAoZm9ybURhdGEpID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDo5MDAwL3VzZXJzL3JlZ2lzdGVyYCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICBib2R5OiBmb3JtRGF0YSxcclxuICAgICAgICB9KVxyXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgbGV0IGVycm9yTWVzc2FnZSA9IGBFcnJvciBlbiBsYSBwZXRpY2nDs246ICR7cmVzcG9uc2Uuc3RhdHVzfSAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YDtcclxuXHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBlcnJvckRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgICAgICAgICBlcnJvck1lc3NhZ2UgPSBlcnJvckRhdGEubWVzc2FnZSB8fCBlcnJvck1lc3NhZ2U7XHJcbiAgICAgICAgICAgIH0gY2F0Y2gge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZXJyb3JUZXh0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xyXG4gICAgICAgICAgICAgICAgZXJyb3JNZXNzYWdlID0gZXJyb3JUZXh0IHx8IGVycm9yTWVzc2FnZTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIHsgZXJyb3I6IGVycm9yTWVzc2FnZSB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCB1c2VyQ3JlYXRlZCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgICByZXR1cm4gdXNlckNyZWF0ZWQ7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBhbCBjcmVhciBlbCBsaWJybzpcIiwgZXJyb3IpO1xyXG4gICAgICAgIHJldHVybiB7IGVycm9yOiBcIk9jdXJyacOzIHVuIGVycm9yIGluZXNwZXJhZG9cIiB9O1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgYWRkRmF2b3JpdGVCb29rID0gYXN5bmMgKHVzZXJJZCwgYm9va0lkLCB0b2tlbikgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwOi8vbG9jYWxob3N0OjkwMDAvdXNlcnMvZmF2b3JpdGVzYCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke3Rva2VufWAsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgdXNlcklkLCBib29rSWQgfSlcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgICBpZiAocmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJMaWJybyBhZ3JlZ2FkbyBhIGZhdm9yaXRvc1wiLCBkYXRhKTtcclxuICAgICAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGFsIGFncmVnYXIgYSBmYXZvcml0b3NcIiwgZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZW4gbGEgc29saWNpdHVkOlwiLCBlcnJvcik7XHJcbiAgICAgICAgcmV0dXJuIHsgZXJyb3I6IFwiT2N1cnJpw7MgdW4gZXJyb3IgaW5lc3BlcmFkb1wiIH07XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCByZW1vdmVGYXZvcml0ZUJvb2sgPSBhc3luYyAodXNlcklkLCBib29rSWQsIHRva2VuKSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly9sb2NhbGhvc3Q6OTAwMC91c2Vycy9mYXZvcml0ZXNgLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHt0b2tlbn1gLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHVzZXJJZCwgYm9va0lkIH0pXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTGlicm8gZWxpbWluYWRvIGRlIGZhdm9yaXRvc1wiLCBkYXRhKTtcclxuICAgICAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGFsIGVsaW1pbmFyIGVuIGZhdm9yaXRvc1wiLCBkYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBlbiBsYSBzb2xpY2l0dWQ6XCIsIGVycm9yKTtcclxuICAgICAgICByZXR1cm4geyBlcnJvcjogXCJPY3VycmnDsyB1biBlcnJvciBpbmVzcGVyYWRvXCIgfTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHVwZGF0ZVByb2ZpbGVGZXRjaCA9IGFzeW5jIChmb3JtRGF0YVRvU2VuZCkgPT4ge1xyXG4gICAgY29uc3QgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKSB8fCBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpO1xyXG4gICAgaWYgKCF0b2tlbikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJObyBoYXkgdG9rZW4gZGUgYXV0ZW50aWNhY2nDs24uXCIpO1xyXG4gICAgICAgIHJldHVybiB7IHN0YXR1czogXCJFcnJvclwiLCBtZXNzYWdlOiBcIk5vIGhheSB0b2tlbiBkaXNwb25pYmxlXCIgfTtcclxuICAgIH1cclxuXHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiQW50ZXMgZGUgbGxhbWRhXCIpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly9sb2NhbGhvc3Q6OTAwMC91c2Vycy9wcm9maWxlYCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6IFwiUFVUXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke3Rva2VufWAsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGJvZHk6IGZvcm1EYXRhVG9TZW5kXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcclxuICAgICAgICBpZiAocmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgcmV0dXJuIHsgc3RhdHVzOiBcIlN1Y2NlZWRlZFwiLCBkYXRhIH07XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHsgc3RhdHVzOiBcIkVycm9yXCIsIG1lc3NhZ2U6IGRhdGEubWVzc2FnZSB9O1xyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZW4gbGEgc29saWNpdHVkOicsIGVycm9yKTtcclxuICAgICAgICByZXR1cm4geyBzdGF0dXM6IFwiRXJyb3JcIiwgbWVzc2FnZTogZXJyb3IubWVzc2FnZSB9O1xyXG4gICAgfVxyXG59Il0sIm5hbWVzIjpbImhhbmRsZUxvZ2luRmV0Y2giLCJlbWFpbCIsInBhc3N3b3JkIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJqc29uIiwiZXJyb3IiLCJzdGF0dXMiLCJtZXNzYWdlIiwicmVnaXN0ZXJVc2VyIiwiZm9ybURhdGEiLCJvayIsImVycm9yTWVzc2FnZSIsInN0YXR1c1RleHQiLCJlcnJvckRhdGEiLCJlcnJvclRleHQiLCJ0ZXh0IiwidXNlckNyZWF0ZWQiLCJjb25zb2xlIiwiYWRkRmF2b3JpdGVCb29rIiwidXNlcklkIiwiYm9va0lkIiwidG9rZW4iLCJsb2ciLCJyZW1vdmVGYXZvcml0ZUJvb2siLCJ1cGRhdGVQcm9maWxlRmV0Y2giLCJmb3JtRGF0YVRvU2VuZCIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzZXNzaW9uU3RvcmFnZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/api/usersFetch.js\n"));

/***/ })

});